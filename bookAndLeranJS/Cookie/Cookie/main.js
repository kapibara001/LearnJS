/* 
    Для  того  чтобы  как-то  «пометить»  различных клиентов  сервер  может  добавить  к  своему  ответ у  
    некоторые  данные,  уникальные  для  каждого  клиента,  а  клиент,  при  обращении  к  серверу,  пересылает  эти  
    данные обратно. Так реализуется возможность «помнить» о предыдущих сеансах, даже если будут изменения в IP-
    адресах.

    Такие данные получили название "Cookie"(от англ. печенье, но так и произносится на русском).
    Примером куки является Красная шапочка, которая несла от мамы(клиента) пирожки(запрос) бабушке(серверу) и потом шла домой к маме(клиенту)

    По формализму эти данные похожи на POST запрос в формах. То есть он не несет никакой информации в строке запроса,
    чтобы понять информацию, надо проанализировать http-пакет.


    Некоторые особенности Cookie: 
        -Передается в составе http-пакета, поэтому, как и все остальное, явялется строковым элементом, создание и удаление
        Cookie также логично организовывать в строковом виде.

        -Для одного сайта может быть организовано много куки одного пользователя, поэтому Cookie можно присваивать
        имена. Устанавливаются они(имена) по инструкции имя=значение, меняются их значения также, как и в обычной
        переменной - просто перезадаются значения.

        -Для каждого куки существует свое время действия. По прошествии срока действия, указанного в атрибуте "expires",
        Cookie автоматически удаляются.

        -В больших сайтах для лучшей их организации обычноают несколько поддоменов, предназначенных для различных  задач.
        Это регулируется таким свойством, как "path", устанавливаемым для каждой Cookie отдельно. Наиболее общее выражение: 
        "path=/" - доступ со всех страниц сайта.

        -С точки зрения DOM, все Cookie хранятся в одной переменной document.cookie. Она является !СТРОКОЙ!, а не чем-либо другим.

        -Для добавления Cookie нужно присвоить переменной "document.cookie" новое значение. Для этого надо использовать 
        простое присваивание "=", а не "+=", как сделали бы это при работе со строками. Нужно делать так даже в том случае,
        если Куки уже есть, т.к при присванивании предыдущие куки не стираются:

            document.cookie = "register=USER; expires=Thu, 14 Feb 2025 08:12:12 GMT; path=/"
            --В строке добавления указывается имя куки(в нашем случае это register) и его знаение USER. Доп кавычки не нужны.
            --Через ; указывается ключевое слово "expires=" и записывается срок действия Cookie по стандарту RFC 2822
            --Затем опять через ; укзаывается ключаевое слово "path" и область действрия этого куки. В данном случае это глобальная 
            часть
            --ДОПОЛНИТЕЛЬНО может быть указан домен, для которого устанавливается данное значение "domain=mystep.otg". По умолчанию
            имя домена устаналивается в имя сайта
            --ДОПОЛНИТЕЛЬНО атрибут "secure". Используется без значения. Говорит о том, что данный куки может передаваться только через
            защищенный протокол HTTPS.

        Значение Cookie («User») может быть выбрано произвольным образом. Имя («registered») ограничено правилами именования (см. урок 1), 
        но тоже предусматривает возможность изменения. Ключевые слова «expires=» и «path=» должны быть набраны именно в таком виде,  
        вариации  не  разрешаются.  Формат  даты-времени  также должен соответствовать указанному формату.

        Если нам надо получить полный перечень куки, обращаемся к переменной document.cookie для чтения
*/

{
    let cookiefield = document.getElementById("moral");
    // document.cookie = "register=USER; passwor=154asd; expires=Thu, 9 Mar 2025 19:26:00 GMT; path=/"; 
    cookiefield.innerText = document.cookie; // Куки будет показываться на странице до определенного момента(9 марта 19:11 GMT)

    let cookieAll = document.cookie;
    let cookieObj = {};
    let s = cookieAll.split('; ');
    for (let i = 0; i < s.length; i++) {
        let c = s[i].split('=');
        cookieObj[c[0]] = c[1];
    }

    for (let parametr in cookieObj) {
        cookiefield.innerHTML += parametr + " = " + cookieObj[parametr] + "<br>";
    }
}

/*
    Для удаления куки нет отдельных команд. Можно это сделать только тем самым, что установить куки "просрочнный" период действия.
    
*/
