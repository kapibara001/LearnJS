/*
    Проврка правильностьи введенных форм, их соответствие шаблонам или ограничениям - проверка достоверности форм.
    Для формы, которая обязательна к заполнению(должна содержать хотя бы пробел), нужно приписать required.
    
    Первый этап - указание правильных атрибутов для элементов формы(код html)
    Второй этап - контроль содержимого непосредственного перед его отправкой
        а) Перехват события onsubmit формы. Генерируется при нажатии input type="submit" или когда пользователь
           нажимает Enter */
{
    let form = document.getElementById("myform1");
    form.addEventListener("submit", checkForm);

    function checkForm(e) { // event или e (любое название, просто принято называть так) - содрежит детали
                                // перехваченного события
        e.preventDefault(); // Страничка не перезагружается
        let nameText = document.getElementById("name-inp").value;

        if (nameText.lenght > 0) {
            form.submit();
        } 
    }
}

/*      б)  Второй способ отменить автоматическую отправку формы состоит в отказе от элемента типа «submit»\
            и использовании  обычной  кнопки. Тогда событие onsubmit() не генерируется и отправка данных формы
            происходит в принудительном порядке в резульате вызова функции при нажатии:
                btn.onclick(ф-я)

    Третий этап проверки достоверности - обработка запроса на сервере, на который он был послан.
*/


/* 
    Регулярные выражения(Regular Expressions) - объект RegExp 
    Это мощнейший инструмент проверки строковых данных на соответствие определенным шаблонам.

    В терминологии рег.выр часто используются слова "шаблон", "маска", "флаг"(некоторые доп. условия).
    
    Шаблон регулярного выражения можно создать 2 способами:
        а) Литералом(выражение вида "/шаблон/флаги"). Не берется в ковычки. Начало - "/"
            let template1 = /\D/ - Шаблон: "/D", флаги не указаны
        б) Конструктором (конструкция вида new RegExp("шаблон", "флаги"))
            let template2 = new RegExp("\D", "g");
    Различия: 
        -Литеральные шаблоны являются константными, созданными на этапе написания программы
        -При помощи конструктора можно поменять шаблон во время выполнения программы, после каких-то
            проверок и прочего
            
*/